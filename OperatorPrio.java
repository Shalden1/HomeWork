package HomeWork1;

public class OperatorPrio {
    public static void main(String[] args) {

        int a = 8;
        int b;
        int c = 2;
        boolean d;

        // ------------Тут я всё же попытаюсь сделать так, чтобы ошибок компиляции не было, попутно комментируя, где они были и как я их устранил.-------

        // b = 5 + 2 / a;
        // сразу 2 делится на 8, получаем 0 целых. Далее 5+0=5. В реальности ответ будет 5.25. Можно изменить типы а и b на double, вместо 8 написать 8.0, тогда всё будет правильно.
        System.out.println(b = 5 + 2 / a);

        // b = (5 + 2) / a;
        // Реальный ответ 0.875. Программа выдает 0. По той же причине, что и сверху. 7/8=0,875. А так как тип int, то ответ 0. Ошибку не выдает.
        System.out.println(b = (5 + 2) / a);

        // b = (5 + 2++) / a;
        // unexpected type - для 2++. Ошибка. Инкремент нельзя применить к числу. Нужен ввод переменной, например c = 2; далее работает. Как в задании с 8, ввожу на это число переменную, иначе ошибка будет далее во всех выражениях. ответ 7/8 = 0 При условии, что выражение выполняется 1 раз.
        System.out.println(b = (5 + c++) / a);

        // b = ((5 + 2++) / --a);
        // unexpected type - для 2++. Ошибка. Инкремент нельзя применить к числу. Нужен ввод переменной, например c = 2; далее работает. ответ 7/7 = 1
        System.out.println(b = ((5 + c++) / --a));

        // b = (5 * 2 >> 2++) / --a;
        //5*2=10, в двоичном коде 1010. сдвиг на 2 вправо, получаем 10 в двоичном коде или 2  в десятичной. 2/7=0
        System.out.println(b = (5 * 2 >> c++) / --a);

        // b = (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --a;
        // множество ошибок. Оператор ?: используется для замены операторов If else Т.к. первый блок не верен, то выражение в 3 блоке становится результатом всего выражения.
        // System.out.println(b = (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> c++) / --a); // программа даже после попыток всё исправить выдаёт ошибку. Для выражения 68 >= 68 необходим логический тип, а для 22 * 2 и сдвига вправо - числовой.Думаю, нужна более сложная конструкция

        // d = 6 - 2 > 3 && 12 * 12 <= 119;
        // && - логический оператор, короткая схема. Правая часть выражения false, ответ тоже false.
        System.out.println(d = 6 - 2 > 3 && 12 * 12 <= 119);

        // d = false && true;
        // Оба не true, значит, false
        System.out.println(d = false && true);






    }
}
